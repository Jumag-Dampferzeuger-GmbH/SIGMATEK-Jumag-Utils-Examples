//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "Ar_Sinus"
	Revision           = "1.2"
	GUID               = "{6914DFAD-9B8C-11D5-B925-0010609208D7}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "true"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	IconPath           = ".\Class\Ar_Sinus\sin3.ico"
	SharedCommandTable = "true"
	Objectsize         = "(284,120)"
	Comment            = "sine function&#13;&#10;degree (1/10000) value =&gt; result [1/100000] // with Read(Value) or Write(Written Value)">
	<Channels>
		<Server Name="Data" GUID="{6914DFAE-9B8C-11D5-B925-0010609208D7}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false" Comment="Write the degree value =&gt;  or read the server for result"/>
		<Client Name="Value" Required="false" Internal="false" Comment="value for calculation"/>
	</Channels>
	<Dependencies>
		<Files>
			<File Path=".\Source\code\Global_Functions\H_Runden_Def.h" Include="false"/>
			<File Path=".\Source\code\Global_Functions\H_Interpol_Def.h" Include="false"/>
			<File Path=".\Source\code\Global_Functions\Runden.st"/>
			<File Path=".\Source\code\Global_Functions\Interpol.st"/>
		</Files>
	</Dependencies>
	<RevDoku>
		<Owner Company="Sigmatek"/>
		<Dokumentation Revision="1.2" Date="30.04.09" Author="hötant" Company="Sigmatek" Description="Changed LSL_TARGETARCH_ARM to _LSL_TARGETARCH_ARM"/>
		<Dokumentation Revision="1.1" Date="04.02.09" Author="hötant" Company="Sigmatek" Description="AWL to ST (to guarantee compatibility for other processors) "/>
	</RevDoku>
</Class>
*)
Ar_Sinus : CLASS
  //Servers:
	Data 	: SvrChCmd_DINT;
  //Clients:
	Value 	: CltCh_DINT;
  //Variables:
  //Functions:
				//! <Function Comment=" ******************************************************************&#13;&#10;                   arithmetic sinus function&#13;&#10;                  value [1/10000] =&gt; result [1/100000]&#13;&#10;-------------------------------------------------------------------&#13;&#10; possibilities:   1. write the degrees -&gt; get the result&#13;&#10;             2. call the read function and the Sinus of the&#13;&#10;                 Connected Server will be calculated.&#13;&#10;  CLIENT: value in degree [1/10000]&#13;&#10;  SERVER: Data  in result [1/100000]&#13;&#10; ******************************************************************&#13;&#10;      created   :   BS  :   KW 35/01&#13;&#10; ******************************************************************&#13;&#10;                           SINUS table&#13;&#10; ******************************************************************&#13;&#10;   tested: BS | 29.11.2001 | Lasal V00.53 | OPS V4.00&#13;&#10; ******************************************************************&#13;&#10; ******************************************************************&#13;&#10;                   Aritmetische Sinus Funktion&#13;&#10;                  Wert [1/10000] =&gt; Resultat [1/100000]&#13;&#10;-------------------------------------------------------------------&#13;&#10; Möglichkeiten:   1. Schreiben sie den Wert in Grad&#13;&#10;                      =&gt; Resultat wird zurückgegeben&#13;&#10;             2. Die Read Funktion berechnet den Sinus des&#13;&#10;                      Verbunden Servers&#13;&#10;  CLIENT: Value : Wert in Grad [1/10000]&#13;&#10;  SERVER: Data  : Resultat in [1/100000]&#13;&#10; ******************************************************************&#13;&#10;    erstellt    :   BS  :     KW 35/01&#13;&#10; ******************************************************************&#13;&#10;                           Sinus Tabelle&#13;&#10; ******************************************************************&#13;&#10;   getested: BS | 29.11.2001 | Lasal V00.53 | OPS V4.00&#13;&#10; ******************************************************************&#13;&#10;" Name="Sinus_Table"/>
	FUNCTION GLOBAL TAB Sinus_Table;
				//! <Function Comment=" ******************************************************************&#13;&#10;                   arithmetic sinus function&#13;&#10;                  value [1/10000] =&gt; result [1/100000]&#13;&#10;-------------------------------------------------------------------&#13;&#10; possibilities:   1. write the degrees -&gt; get the result&#13;&#10;             2. call the read function and the Sinus of the&#13;&#10;                 Connected Server will be calculated.&#13;&#10;  CLIENT: value in degree [1/10000]&#13;&#10;  SERVER: Data  in result [1/100000]&#13;&#10; ******************************************************************&#13;&#10;      created   :   BS  :   KW 35/01&#13;&#10; ******************************************************************&#13;&#10;                operation of READ function&#13;&#10; ******************************************************************&#13;&#10;   tested: BS | 29.11.2001 | Lasal V00.53 | OPS V4.00&#13;&#10; ******************************************************************&#13;&#10; ******************************************************************&#13;&#10;                   Aritmetische Sinus Funktion&#13;&#10;                  Wert mit [1/10000] =&gt; Resultat [1/100000]&#13;&#10;-------------------------------------------------------------------&#13;&#10; Möglichkeiten:   1. Schreiben sie den Wert in Grad&#13;&#10;                      =&gt; Resultat wird zurückgegeben&#13;&#10;             2. Die Read Funktion berechnet den Sinus des&#13;&#10;                      Verbunden Servers&#13;&#10;  CLIENT: Value : Wert in Grad [1/10000]&#13;&#10;  SERVER: Data  : Resultat in [1/100000]&#13;&#10; ******************************************************************&#13;&#10;    erstellt    :   BS  :     KW 35/01&#13;&#10; ******************************************************************&#13;&#10;                           READ Funktion&#13;&#10; ******************************************************************&#13;&#10;   getested: BS | 29.11.2001 | Lasal V00.53 | OPS V4.00&#13;&#10; ******************************************************************&#13;&#10;" Name="Data.Read"/>
	FUNCTION VIRTUAL GLOBAL Data::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
				//! <Function Comment=" ******************************************************************&#13;&#10;                   arithmetic sinus function&#13;&#10;                  value [1/10000] =&gt; result [1/100000]&#13;&#10;-------------------------------------------------------------------&#13;&#10; possibilities:   1. write the degrees -&gt; get the result&#13;&#10;             2. call the read function and the Sinus of the&#13;&#10;                 Connected Server will be calculated.&#13;&#10;  CLIENT: value in degree [1/10000]&#13;&#10;  SERVER: Data  in result [1/100000]&#13;&#10; ******************************************************************&#13;&#10;      created   :   BS  :   KW 35/01&#13;&#10; ******************************************************************&#13;&#10;                operation of WRITE function&#13;&#10; ******************************************************************&#13;&#10;   tested: BS | 29.11.2001 | Lasal V00.53 | OPS V4.00&#13;&#10; ******************************************************************&#13;&#10; ******************************************************************&#13;&#10;                   Aritmetische Sinus Funktion&#13;&#10;                  Wert mit [1/10000] =&gt; Resultat [1/100000]&#13;&#10;-------------------------------------------------------------------&#13;&#10; Möglichkeiten:   1. Schreiben sie den Wert in Grad&#13;&#10;                      =&gt; Resultat wird zurückgegeben&#13;&#10;             2. Die Read Funktion berechnet den Sinus des&#13;&#10;                      Verbunden Servers&#13;&#10;  CLIENT: Value : Wert in Grad [1/10000]&#13;&#10;  SERVER: Data  : Resultat in [1/100000]&#13;&#10; ******************************************************************&#13;&#10;    erstellt    :   BS  :     KW 35/01&#13;&#10; ******************************************************************&#13;&#10;                           WRITE Funktion&#13;&#10; ******************************************************************&#13;&#10;   getested: BS | 29.11.2001 | Lasal V00.53 | OPS V4.00&#13;&#10; ******************************************************************&#13;&#10;" Name="Data.Write"/>
	FUNCTION VIRTUAL GLOBAL Data::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB Ar_Sinus::@CT_
0$UINT,
2#0100000000000000$UINT, //TY_AR_SINUS
1$UINT, 2$UINT, (SIZEOF(::Ar_Sinus))$UINT, 
1$UINT, 1$UINT, 0$UINT, 
TO_UDINT(528675999), "Ar_Sinus", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::Ar_Sinus.Data.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(2607161047), "Data", 
//Clients:
(::Ar_Sinus.Value.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(3928201860), "Value", 
END_FUNCTION


#define USER_CNT_Ar_Sinus 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_Ar_Sinus] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION Ar_Sinus::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_Ar_Sinus, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Read		:= #Read();
	vmt.CmdTable.Write		:= #Write();
	Data.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF Data.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


//*********************Inserted from .\code\C_Ar_Sinus.st*********************



 



//[#ENGLISH]
// ******************************************************************
//                   arithmetic sinus function
//                  value [1/10000] => result [1/100000]
//-------------------------------------------------------------------
//	possibilities:   1. write the degrees -> get the result
//          		 2. call the read function and the Sinus of the
//             			 Connected Server will be calculated.
//
//		CLIENT: value in degree [1/10000]
//		SERVER: Data  in result [1/100000]
// ******************************************************************
//   		 created 		: 		BS		: 		KW 35/01
// ******************************************************************
//                operation of WRITE function
// ******************************************************************
//   tested: BS | 29.11.2001 | Lasal V00.53 | OPS V4.00
// ******************************************************************
//[#DEUTSCH]
// ******************************************************************
//                   Aritmetische Sinus Funktion
//                  Wert mit [1/10000] => Resultat [1/100000]
//-------------------------------------------------------------------
//	Möglichkeiten:   1. Schreiben sie den Wert in Grad
//                      => Resultat wird zurückgegeben
//          		 2. Die Read Funktion berechnet den Sinus des
//                      Verbunden Servers
//
//		CLIENT: Value : Wert in Grad [1/10000]
//		SERVER: Data  : Resultat in [1/100000]
// ******************************************************************
//  		erstellt 		 :		 BS		:   		KW 35/01
// ******************************************************************
//                           WRITE Funktion
// ******************************************************************
//   getested: BS | 29.11.2001 | Lasal V00.53 | OPS V4.00
// ******************************************************************
FUNCTION VIRTUAL GLOBAL Ar_Sinus::Data::Write
VAR_INPUT
	input		: DINT;
END_VAR
VAR_OUTPUT
	result		: DINT;
END_VAR
VAR
	zw_wert		: UDINT;
	nr			: UDINT;
END_VAR
	
	//-- nur positive Werte -------------------------
	IF input < 0 THEN
   		input :=  ABS(input) + 1800000;
	END_IF;

	//-- ein Vielfaches von 360.0000 weraussuchen ----
	input -= (input / 3600000) * 3600000;
	nr  := TO_UDINT(input / 900000);

	//-- auf die positive 1/4 Welle rechnen ---------
	CASE nr OF
    	0: zw_wert := TO_UDINT(input);
    	1: zw_wert := TO_UDINT(ABS(input - 1800000));
    	2: zw_wert := TO_UDINT(input - 1800000);
    	3: zw_wert := TO_UDINT(ABS(input - 1800000*2));
	END_CASE;

	result := TO_DINT(INTERPOL_D(#Sinus_Table(), zw_wert));

	//-- negative Halbwelle auswerten ---------------
	CASE nr OF
    	2,3: result *= (-1);
	END_CASE;

	result := Runden(result, 3);

	Data := result;

END_FUNCTION //VIRTUAL GLOBAL Ar_Sinus::Data::Write
//[#ENGLISH]
// ******************************************************************
//                   arithmetic sinus function
//                  value [1/10000] => result [1/100000]
//-------------------------------------------------------------------
//	possibilities:   1. write the degrees -> get the result
//          		 2. call the read function and the Sinus of the
//             			 Connected Server will be calculated.
//
//		CLIENT: value in degree [1/10000]
//		SERVER: Data  in result [1/100000]
// ******************************************************************
//   		 created 		: 		BS		: 		KW 35/01
// ******************************************************************
//                operation of READ function
// ******************************************************************
//   tested: BS | 29.11.2001 | Lasal V00.53 | OPS V4.00
// ******************************************************************
//[#DEUTSCH]
// ******************************************************************
//                   Aritmetische Sinus Funktion
//                  Wert mit [1/10000] => Resultat [1/100000]
//-------------------------------------------------------------------
//	Möglichkeiten:   1. Schreiben sie den Wert in Grad
//                      => Resultat wird zurückgegeben
//          		 2. Die Read Funktion berechnet den Sinus des
//                      Verbunden Servers
//
//		CLIENT: Value : Wert in Grad [1/10000]
//		SERVER: Data  : Resultat in [1/100000]
// ******************************************************************
//  		erstellt 		 :		 BS		:   		KW 35/01
// ******************************************************************
//                           READ Funktion
// ******************************************************************
//   getested: BS | 29.11.2001 | Lasal V00.53 | OPS V4.00
// ******************************************************************
FUNCTION VIRTUAL GLOBAL Ar_Sinus::Data::Read
VAR_OUTPUT
	output		: DINT;
END_VAR

	Value  := Value.read();
	output := Data.Write(Value);

END_FUNCTION //VIRTUAL GLOBAL Ar_Sinus::Data::Read
//[#ENGLISH]
// ******************************************************************
//                   arithmetic sinus function
//                  value [1/10000] => result [1/100000]
//-------------------------------------------------------------------
//	possibilities:   1. write the degrees -> get the result
//          		 2. call the read function and the Sinus of the
//             			 Connected Server will be calculated.
//
//		CLIENT: value in degree [1/10000]
//		SERVER: Data  in result [1/100000]
// ******************************************************************
//   		 created 		: 		BS		: 		KW 35/01
// ******************************************************************
//                           SINUS table
// ******************************************************************
//   tested: BS | 29.11.2001 | Lasal V00.53 | OPS V4.00
// ******************************************************************
//[#DEUTSCH]
// ******************************************************************
//                   Aritmetische Sinus Funktion
//                  Wert [1/10000] => Resultat [1/100000]
//-------------------------------------------------------------------
//	Möglichkeiten:   1. Schreiben sie den Wert in Grad
//                      => Resultat wird zurückgegeben
//          		 2. Die Read Funktion berechnet den Sinus des
//                      Verbunden Servers
//
//		CLIENT: Value : Wert in Grad [1/10000]
//		SERVER: Data  : Resultat in [1/100000]
// ******************************************************************
//  		erstellt 		 :		 BS		:   		KW 35/01
// ******************************************************************
//                           Sinus Tabelle
// ******************************************************************
//   getested: BS | 29.11.2001 | Lasal V00.53 | OPS V4.00
// ******************************************************************
FUNCTION GLOBAL TAB Ar_Sinus::Sinus_Table

000900001$UDINT, // Maxvalue
000000180$UDINT, // number of steps

//     result      ||     input
// Sin * 100000000 ||  degree * 10000
//--------------------------------------
000000000 $UDINT, // 00,0000
000872654 $UDINT, // 00,5000
001745241 $UDINT, // 01,0000
002617695 $UDINT, // 01,5000
003489950 $UDINT, // 02,0000
004361939 $UDINT, // 02,5000
005233596 $UDINT, // 03,0000
006104854 $UDINT, // 03,5000
006975647 $UDINT, // 04,0000
007845910 $UDINT, // 04,5000
008715574 $UDINT, // 05,0000
009584575 $UDINT, // 05,5000
010452846 $UDINT, // 06,0000
011320321 $UDINT, // 06,5000
012186934 $UDINT, // 07,0000
013052619 $UDINT, // 07,5000
013917310 $UDINT, // 08,0000
014780941 $UDINT, // 08,5000
015643447 $UDINT, // 09,0000
016504761 $UDINT, // 09,5000
017364818 $UDINT, // 10,0000
018223553 $UDINT, // 10,5000
019080900 $UDINT, // 11,0000
019936793 $UDINT, // 11,5000
020791169 $UDINT, // 12,0000
021643961 $UDINT, // 12,5000
022495105 $UDINT, // 13,0000
023344536 $UDINT, // 13,5000
024192190 $UDINT, // 14,0000
025038000 $UDINT, // 14,5000
025881905 $UDINT, // 15,0000
026723838 $UDINT, // 15,5000
027563736 $UDINT, // 16,0000
028401534 $UDINT, // 16,5000
029237170 $UDINT, // 17,0000
030070580 $UDINT, // 17,5000
030901699 $UDINT, // 18,0000
031730466 $UDINT, // 18,5000
032556815 $UDINT, // 19,0000
033380686 $UDINT, // 19,5000
034202014 $UDINT, // 20,0000
035020738 $UDINT, // 20,5000
035836795 $UDINT, // 21,0000
036650123 $UDINT, // 21,5000
037460659 $UDINT, // 22,0000
038268343 $UDINT, // 22,5000
039073113 $UDINT, // 23,0000
039874907 $UDINT, // 23,5000
040673664 $UDINT, // 24,0000
041469324 $UDINT, // 24,5000
042261826 $UDINT, // 25,0000
043051110 $UDINT, // 25,5000
043837115 $UDINT, // 26,0000
044619781 $UDINT, // 26,5000
045399050 $UDINT, // 27,0000
046174861 $UDINT, // 27,5000
046947156 $UDINT, // 28,0000
047715876 $UDINT, // 28,5000
048480962 $UDINT, // 29,0000
049242356 $UDINT, // 29,5000
050000000 $UDINT, // 30,0000
050753836 $UDINT, // 30,5000
051503807 $UDINT, // 31,0000
052249856 $UDINT, // 31,5000
052991926 $UDINT, // 32,0000
053729961 $UDINT, // 32,5000
054463904 $UDINT, // 33,0000
055193699 $UDINT, // 33,5000
055919290 $UDINT, // 34,0000
056640624 $UDINT, // 34,5000
057357644 $UDINT, // 35,0000
058070296 $UDINT, // 35,5000
058778525 $UDINT, // 36,0000
059482279 $UDINT, // 36,5000
060181502 $UDINT, // 37,0000
060876143 $UDINT, // 37,5000
061566148 $UDINT, // 38,0000
062251464 $UDINT, // 38,5000
062932039 $UDINT, // 39,0000
063607822 $UDINT, // 39,5000
064278761 $UDINT, // 40,0000
064944805 $UDINT, // 40,5000
065605903 $UDINT, // 41,0000
066262005 $UDINT, // 41,5000
066913061 $UDINT, // 42,0000
067559021 $UDINT, // 42,5000
068199836 $UDINT, // 43,0000
068835458 $UDINT, // 43,5000
069465837 $UDINT, // 44,0000
070090926 $UDINT, // 44,5000
070710678 $UDINT, // 45,0000
071325045 $UDINT, // 45,5000
071933980 $UDINT, // 46,0000
072537437 $UDINT, // 46,5000
073135370 $UDINT, // 47,0000
073727734 $UDINT, // 47,5000
074314483 $UDINT, // 48,0000
074895572 $UDINT, // 48,5000
075470958 $UDINT, // 49,0000
076040597 $UDINT, // 49,5000
076604444 $UDINT, // 50,0000
077162458 $UDINT, // 50,5000
077714596 $UDINT, // 51,0000
078260816 $UDINT, // 51,5000
078801075 $UDINT, // 52,0000
079335334 $UDINT, // 52,5000
079863551 $UDINT, // 53,0000
080385686 $UDINT, // 53,5000
080901699 $UDINT, // 54,0000
081411552 $UDINT, // 54,5000
081915204 $UDINT, // 55,0000
082412619 $UDINT, // 55,5000
082903757 $UDINT, // 56,0000
083388582 $UDINT, // 56,5000
083867057 $UDINT, // 57,0000
084339145 $UDINT, // 57,5000
084804810 $UDINT, // 58,0000
085264016 $UDINT, // 58,5000
085716730 $UDINT, // 59,0000
086162916 $UDINT, // 59,5000
086602540 $UDINT, // 60,0000
087035570 $UDINT, // 60,5000
087461971 $UDINT, // 61,0000
087881711 $UDINT, // 61,5000
088294759 $UDINT, // 62,0000
088701083 $UDINT, // 62,5000
089100652 $UDINT, // 63,0000
089493436 $UDINT, // 63,5000
089879405 $UDINT, // 64,0000
090258528 $UDINT, // 64,5000
090630779 $UDINT, // 65,0000
090996127 $UDINT, // 65,5000
091354546 $UDINT, // 66,0000
091706007 $UDINT, // 66,5000
092050485 $UDINT, // 67,0000
092387953 $UDINT, // 67,5000
092718385 $UDINT, // 68,0000
093041757 $UDINT, // 68,5000
093358043 $UDINT, // 69,0000
093667219 $UDINT, // 69,5000
093969262 $UDINT, // 70,0000
094264149 $UDINT, // 70,5000
094551858 $UDINT, // 71,0000
094832366 $UDINT, // 71,5000
095105652 $UDINT, // 72,0000
095371695 $UDINT, // 72,5000
095630476 $UDINT, // 73,0000
095881973 $UDINT, // 73,5000
096126170 $UDINT, // 74,0000
096363045 $UDINT, // 74,5000
096592583 $UDINT, // 75,0000
096814764 $UDINT, // 75,5000
097029573 $UDINT, // 76,0000
097236992 $UDINT, // 76,5000
097437006 $UDINT, // 77,0000
097629601 $UDINT, // 77,5000
097814760 $UDINT, // 78,0000
097992470 $UDINT, // 78,5000
098162718 $UDINT, // 79,0000
098325491 $UDINT, // 79,5000
098480775 $UDINT, // 80,0000
098628560 $UDINT, // 80,5000
098768834 $UDINT, // 81,0000
098901586 $UDINT, // 81,5000
099026807 $UDINT, // 82,0000
099144486 $UDINT, // 82,5000
099254615 $UDINT, // 83,0000
099357186 $UDINT, // 83,5000
099452190 $UDINT, // 84,0000
099539620 $UDINT, // 84,5000
099619470 $UDINT, // 85,0000
099691733 $UDINT, // 85,5000
099756405 $UDINT, // 86,0000
099813480 $UDINT, // 86,5000
099862953 $UDINT, // 87,0000
099904822 $UDINT, // 87,5000
099939083 $UDINT, // 88,0000
099965732 $UDINT, // 88,5000
099984770 $UDINT, // 89,0000
099996192 $UDINT, // 89,5000
100000000 $UDINT, // 90,0000

END_FUNCTION //GLOBAL Ar_Sinus::Sinus_Table

